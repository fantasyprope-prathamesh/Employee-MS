Absolutely, you can use an INNER JOIN for this operation if you want to retrieve only the tasks that have corresponding employees. Here's how you can modify the query:

Query with INNER JOIN:
sql
Copy code
-- INNER JOIN: Retrieve tasks with their corresponding employees
SELECT tasks.task_id, tasks.task_description, employees.employee_name
FROM tasks
INNER JOIN employees ON tasks.employee_id = employees.employee_id;
Result:

sql
Copy code
| task_id | task_description      | employee_name |
|---------|------------------------|----------------|
| 1       | Complete Report        | John Doe       |
| 2       | Review Presentation    | Jane Smith     |
| 3       | Submit Expenses         | John Doe       |
| 4       | Prepare Documentation  | Mike Johnson   |
Explanation:

The INNER JOIN retrieves only the records where there is a match in both the tasks and employees tables based on the common column employee_id.
Each row represents a task with its description and the name of the employee assigned to that task.
In this case, using INNER JOIN ensures that you only get tasks that have corresponding employees. If a task doesn't have an assigned employee, it won't be included in the result set.

Choose between LEFT JOIN and INNER JOIN based on your specific requirements. Use INNER JOIN if you only want tasks with assigned employees, and use LEFT JOIN if you want to include all tasks regardless of whether they have assigned employees.